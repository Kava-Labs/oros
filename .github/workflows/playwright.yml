name: Client Playwright Tests
on: [push]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  test:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    env:
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      OPENAI_BASE_URL: https://api.openai.com/v1
      VITE_OPENAI_BASE_URL: http://localhost:5555/openai/v1
    steps:
      - uses: actions/checkout@v4
        with:
          ssh-key: ${{ secrets.E2E_PROVIDER_REPO_KEY }}
          repository: kava-labs/e2e-account-provider
          path: e2e-account-provider

      # Setup Node.js
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*

      # Setup Go
      - uses: actions/setup-go@v4
        with:
          go-version: 1.23

      # Install Node.js dependencies
      - name: Install dependencies
        run: npm ci

      - name: get account provider cache key
        id: get-provider-head
        run: |
          echo "provider-head=$(cd ./e2e-account-provider && git show -s --format=%H && cd ..)" >> $GITHUB_OUTPUT
        shell: bash

      - name: check account provider cache
        id: providercache
        uses: actions/cache@v3
        with:
          path: ./account-provider
          key: ${{ steps.get-provider-head.outputs.provider-head }}

      - name: build account provider if cache miss
        if: steps.providercache.outputs.cache-hit != 'true'
        run: cd e2e-account-provider && make build && cd .. && mv ./e2e-account-provider/account-provider ./

      - name: generate and fund accounts
        run: rm -f accounts.json && ./account-provider --mnemonic="${{ secrets.WHALE_MNEMONIC }}" --evm_mnemonic="${{ secrets.EVM_WHALE_MNEMONIC }}" --provider_config="./e2e/provider_config.json"

      - name: Start API server
        # Wait for containers to be healthy or fail after 30 seconds
        run: |
          docker compose -f docker-compose.yaml \
            up -d kavachat-api --wait --wait-timeout 30

      - name: Output logs if containers are unhealthy
        if: failure()
        run: docker compose -f docker-compose.yaml logs

      # Install Playwright Browsers
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps chromium

      # Run Playwright tests
      - name: Run Playwright tests
        run: DEBUG=pw:webserver npx playwright test --timeout=60000

      - name: Shutdown API server
        if: always()
        run: docker compose -f docker-compose.yaml down

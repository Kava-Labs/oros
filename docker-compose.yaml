services:
  kavachat-api:
    build:
      context: ./api
      dockerfile: Dockerfile
    ports:
      - '5555:5555'
    environment:
      KAVACHAT_API_LOG_LEVEL: debug
      KAVACHAT_API_PORT: '5555'
      KAVACHAT_API_HOST: '0.0.0.0'
      KAVACHAT_API_BACKEND_0_NAME: 'OpenAI'

      # localstack: localhost may fail with hostname resolution error
      AWS_ENDPOINT_URL: http://127.0.0.1:4566
      # file support
      KAVACHAT_API_PUBLIC_URL: http://localhost:8080
      KAVACHAT_API_S3_BUCKET: test-bucket

      # Pass through existing environment variables
      KAVACHAT_API_BACKEND_0_BASE_URL: ${OPENAI_BASE_URL}
      KAVACHAT_API_BACKEND_0_API_KEY: ${OPENAI_API_KEY}
      KAVACHAT_API_BACKEND_0_ALLOWED_MODELS: 'gpt-4o,gpt-4o-mini'

  localstack:
    image: localstack/localstack:4.1.1
    ports:
      - '4566:4566'
    environment:
      SERVICES: 's3'
    volumes:
      - ./aws:/etc/localstack/init/ready.d

  kavanode:
    image: 'kava/kava:${KAVA_TAG:-v0.27.0-goleveldb}'
    ports:
      # open default kava rpc port
      - '26657:26657'
      # open rest port
      - '1317:1317'
      # open grpc port
      - '9090:9090'
      # open grpc-web port
      - '9091:9091'
      # open EVM JSON-RPC port
      - '8545:8545'
      # open Eth websocket port
      - '8546:8546'
    volumes:
      - './tests/kvtool/full_configs/generated/kava/initstate/.kava:/root/.kava'
    # start the blockchain, and set rpc to listen to connections from outside the container
    command:
      - 'sh'
      - '-c'
      - '/root/.kava/config/init-data-directory.sh && kava start --rpc.laddr=tcp://0.0.0.0:26657'
    # kava image does not have healthcheck built in, so we add one here
    healthcheck:
      # Check if kava EVM JSON-RPC is up
      test:
        [
          'CMD',
          'curl',
          '-f',
          '-X',
          'POST',
          '-H',
          'Content-Type: application/json',
          'http://localhost:8545',
        ]
      interval: 30s
      timeout: 30s
      start_period: 1m
      start_interval: 5s
      retries: 3
